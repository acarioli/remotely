{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aldana\\\\Desktop\\\\proyectoReact\\\\remotely-pwa\\\\front\\\\src\\\\components\\\\JobList.jsx\",\n  _s = $RefreshSig$();\nimport '../css/JobList.css';\nimport { Button } from 'react-bootstrap';\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Swal from 'sweetalert2';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const URL = 'http://localhost:3001/';\n  const getJobs = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(URL);\n      setJobs(data.job);\n      console.log(data.job);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/').then(response => {\n      setJobs(response.data.job);\n      console.log(response.data.job);\n    });\n  }, []);\n  const handleDelete = id => {\n    console.log(id);\n    Swal.fire({\n      title: 'Are you sure you want to delete this job?',\n      showDenyButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Exit`\n    }).then(result => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        axios.delete(`${URL}${id}`);\n        Swal.fire('Deleted', '', 'success');\n        getJobs();\n      } else if (result.isDenied) {\n        Swal.fire('This job has not been deleted');\n      }\n    });\n  };\n  const columns = [{\n    id: 'name',\n    label: 'Name',\n    minWidth: 170\n  }, {\n    id: 'code',\n    label: 'ISO\\u00a0Code',\n    minWidth: 100\n  }, {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toLocaleString('en-US')\n  }, {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: value => value.toFixed(2)\n  }];\n  function createData(name, code, population, size) {\n    const density = population / size;\n    return {\n      name,\n      code,\n      population,\n      size,\n      density\n    };\n  }\n  const rows = [];\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"m-4\",\n      children: \"Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 13\n  }, this);\n};\n_s(JobList, \"vzSnYZbZNwP+No8w21gmUGZJzl0=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["Button","axios","React","useState","useEffect","Swal","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","JobList","jobs","setJobs","URL","getJobs","data","get","job","console","log","error","then","response","handleDelete","id","fire","title","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","delete","isDenied","columns","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","slice","row","length"],"sources":["C:/Users/Aldana/Desktop/proyectoReact/remotely-pwa/front/src/components/JobList.jsx"],"sourcesContent":["import '../css/JobList.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst JobList = () => {\r\n        \r\n    const [jobs, setJobs] = useState([])\r\n\r\n    const URL = 'http://localhost:3001/';\r\n\r\n    const getJobs = async () => {\r\n        try {\r\n        const { data } = await axios.get(URL);\r\n        setJobs(data.job)\r\n        console.log(data.job);\r\n        } catch (error) {\r\n        console.error(error);\r\n        }\r\n    }\r\n    \r\n    useEffect( () => {\r\n    axios.get('http://localhost:3001/').then((response) => {\r\n        setJobs(response.data.job);\r\n        console.log(response.data.job);\r\n    });\r\n}, [])\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        console.log(id);\r\n    \r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this job?',\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Delete',\r\n            denyButtonText: `Exit`,\r\n            }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n            axios.delete(`${URL}${id}`)\r\n            Swal.fire('Deleted', '', 'success')\r\n            getJobs()\r\n            } else if (result.isDenied) {\r\n            Swal.fire('This job has not been deleted')\r\n            }\r\n        })}\r\n\r\n\r\n        const columns = [\r\n            { id: 'name', label: 'Name', minWidth: 170 },\r\n            { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n            {\r\n              id: 'population',\r\n              label: 'Population',\r\n              minWidth: 170,\r\n              align: 'right',\r\n              format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n            {\r\n              id: 'size',\r\n              label: 'Size\\u00a0(km\\u00b2)',\r\n              minWidth: 170,\r\n              align: 'right',\r\n              format: (value) => value.toLocaleString('en-US'),\r\n            },\r\n            {\r\n              id: 'density',\r\n              label: 'Density',\r\n              minWidth: 170,\r\n              align: 'right',\r\n              format: (value) => value.toFixed(2),\r\n            },\r\n          ];\r\n          \r\n          function createData(name, code, population, size) {\r\n            const density = population / size;\r\n            return { name, code, population, size, density };\r\n          }\r\n          \r\n          const rows = [\r\n   \r\n          ];\r\n\r\n            const [page, setPage] = React.useState(0);\r\n            const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n          \r\n            const handleChangePage = (event, newPage) => {\r\n              setPage(newPage);\r\n            };\r\n          \r\n            const handleChangeRowsPerPage = (event) => {\r\n              setRowsPerPage(+event.target.value);\r\n              setPage(0);\r\n            };\r\n          \r\n    return (   \r\n      \r\n            <div className=\"container\">\r\n                <h2 className=\"m-4\">Jobs</h2>\r\n                    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                        <TableContainer sx={{ maxHeight: 440 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                    {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row) => {\r\n                                    return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                            {column.format && typeof value === 'number'\r\n                                                ? column.format(value)\r\n                                                : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                        })}\r\n                                    </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                        </Paper>\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default JobList;"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,aAAa;AAE9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAE9C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,GAAG,GAAG,wBAAwB;EAEpC,MAAMC,OAAO,GAAG,YAAY;IACxB,IAAI;MACJ,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACH,GAAG,CAAC;MACrCD,OAAO,CAACG,IAAI,CAACE,GAAG,CAAC;MACjBC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACE,GAAG,CAAC;IACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;MAChBF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACpB;EACJ,CAAC;EAEDpB,SAAS,CAAE,MAAM;IACjBH,KAAK,CAACmB,GAAG,CAAC,wBAAwB,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;MACnDV,OAAO,CAACU,QAAQ,CAACP,IAAI,CAACE,GAAG,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACP,IAAI,CAACE,GAAG,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGF,MAAMM,YAAY,GAAIC,EAAE,IAAK;IACzBN,OAAO,CAACC,GAAG,CAACK,EAAE,CAAC;IAEfvB,IAAI,CAACwB,IAAI,CAAC;MACNC,KAAK,EAAE,2CAA2C;MAClDC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,QAAQ;MAC3BC,cAAc,EAAG;IACjB,CAAC,CAAC,CAACR,IAAI,CAAES,MAAM,IAAK;MACpB;MACA,IAAIA,MAAM,CAACC,WAAW,EAAE;QACxBlC,KAAK,CAACmC,MAAM,CAAE,GAAEnB,GAAI,GAAEW,EAAG,EAAC,CAAC;QAC3BvB,IAAI,CAACwB,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC;QACnCX,OAAO,EAAE;MACT,CAAC,MAAM,IAAIgB,MAAM,CAACG,QAAQ,EAAE;QAC5BhC,IAAI,CAACwB,IAAI,CAAC,+BAA+B,CAAC;MAC1C;IACJ,CAAC,CAAC;EAAA,CAAC;EAGH,MAAMS,OAAO,GAAG,CACZ;IAAEV,EAAE,EAAE,MAAM;IAAEW,KAAK,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAI,CAAC,EAC5C;IAAEZ,EAAE,EAAE,MAAM;IAAEW,KAAK,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAI,CAAC,EACrD;IACEZ,EAAE,EAAE,YAAY;IAChBW,KAAK,EAAE,YAAY;IACnBC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAGC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC,OAAO;EACjD,CAAC,EACD;IACEhB,EAAE,EAAE,MAAM;IACVW,KAAK,EAAE,sBAAsB;IAC7BC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAGC,KAAK,IAAKA,KAAK,CAACC,cAAc,CAAC,OAAO;EACjD,CAAC,EACD;IACEhB,EAAE,EAAE,SAAS;IACbW,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,GAAG;IACbC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAGC,KAAK,IAAKA,KAAK,CAACE,OAAO,CAAC,CAAC;EACpC,CAAC,CACF;EAED,SAASC,UAAU,CAACC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAE;IAChD,MAAMC,OAAO,GAAGF,UAAU,GAAGC,IAAI;IACjC,OAAO;MAAEH,IAAI;MAAEC,IAAI;MAAEC,UAAU;MAAEC,IAAI;MAAEC;IAAQ,CAAC;EAClD;EAEA,MAAMC,IAAI,GAAG,EAEZ;EAEC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGtD,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMsD,gBAAgB,GAAG,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3CL,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzCF,cAAc,CAAC,CAACE,KAAK,CAACG,MAAM,CAAClB,KAAK,CAAC;IACnCW,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAET,oBAEQ;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAI,SAAS,EAAC,KAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACzB,QAAC,KAAK;MAAC,EAAE,EAAE;QAAEQ,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAA,wBAC7C,QAAC,cAAc;QAAC,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAI,CAAE;QAAA,uBACnC,QAAC,KAAK;UAAC,YAAY;UAAC,cAAW,cAAc;UAAA,wBAC7C,QAAC,SAAS;YAAA,uBACN,QAAC,QAAQ;cAAA,UACR1B,OAAO,CAAC2B,GAAG,CAAEC,MAAM,iBAChB,QAAC,SAAS;gBAEV,KAAK,EAAEA,MAAM,CAACzB,KAAM;gBACpB,KAAK,EAAE;kBAAED,QAAQ,EAAE0B,MAAM,CAAC1B;gBAAS,CAAE;gBAAA,UAEpC0B,MAAM,CAAC3B;cAAK,GAJR2B,MAAM,CAACtC,EAAE;gBAAA;gBAAA;gBAAA;cAAA,QAMjB;YAAC;cAAA;cAAA;cAAA;YAAA;UACS;YAAA;YAAA;YAAA;UAAA,QACH,eACZ,QAAC,SAAS;YAAA,UACLwB,IAAI,CACJe,KAAK,CAACd,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAC3DU,GAAG,CAAEG,GAAG,IAAK;cACV,oBACA,QAAC,QAAQ;gBAAC,KAAK;gBAAC,IAAI,EAAC,UAAU;gBAAC,QAAQ,EAAE,CAAC,CAAE;gBAAA,UACxC9B,OAAO,CAAC2B,GAAG,CAAEC,MAAM,IAAK;kBACzB,MAAMvB,KAAK,GAAGyB,GAAG,CAACF,MAAM,CAACtC,EAAE,CAAC;kBAC5B,oBACI,QAAC,SAAS;oBAAiB,KAAK,EAAEsC,MAAM,CAACzB,KAAM;oBAAA,UAC9CyB,MAAM,CAACxB,MAAM,IAAI,OAAOC,KAAK,KAAK,QAAQ,GACrCuB,MAAM,CAACxB,MAAM,CAACC,KAAK,CAAC,GACpBA;kBAAK,GAHKuB,MAAM,CAACtC,EAAE;oBAAA;oBAAA;oBAAA;kBAAA,QAIb;gBAEhB,CAAC;cAAC,GAV6CwC,GAAG,CAACpB,IAAI;gBAAA;gBAAA;gBAAA;cAAA,QAWhD;YAEf,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACM;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA,QACK,eACjB,QAAC,eAAe;QACZ,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;QAClC,SAAS,EAAC,KAAK;QACf,KAAK,EAAEI,IAAI,CAACiB,MAAO;QACnB,WAAW,EAAEd,WAAY;QACzB,IAAI,EAAEF,IAAK;QACX,YAAY,EAAEI,gBAAiB;QAC/B,mBAAmB,EAAEG;MAAwB;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEtB,CAAC;AAAC,GAjJI9C,OAAO;AAAA,KAAPA,OAAO;AAmJb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
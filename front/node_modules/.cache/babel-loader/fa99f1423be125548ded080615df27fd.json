{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aldana\\\\Desktop\\\\proyectoReact\\\\prueba-cuatro\\\\front\\\\src\\\\context\\\\JobContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jobs as data } from \"../data/jobs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobContext = /*#__PURE__*/createContext();\nexport function JobContextProvider(props) {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  function createJob(job) {\n    setJobs([...jobs, {\n      title: job.title,\n      id: jobs.lenght,\n      description: job.description\n    }]);\n  }\n  function deleteJob(jobId) {\n    setJobs(jobs.filter(job => job.id !== jobId));\n  }\n  useEffect(() => {\n    setJobs(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(JobContext.Provider, {\n    value: {\n      jobs,\n      deleteJob,\n      createJob\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(JobContextProvider, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobContextProvider;\nvar _c;\n$RefreshReg$(_c, \"JobContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jobs","data","JobContext","JobContextProvider","props","setJobs","createJob","job","title","id","lenght","description","deleteJob","jobId","filter","children"],"sources":["C:/Users/Aldana/Desktop/proyectoReact/prueba-cuatro/front/src/context/JobContext.jsx"],"sourcesContent":["import {createContext, useState, useEffect} from 'react';\r\nimport { jobs as data } from \"../data/jobs\";\r\n\r\nexport const JobContext = createContext();\r\n\r\nexport function JobContextProvider(props) {\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    function createJob(job) {\r\n        setJobs([...jobs, \r\n            {\r\n            title: job.title,\r\n            id: jobs.lenght,\r\n            description: job.description,\r\n            }\r\n        ]);\r\n    }\r\n    function deleteJob(jobId) {\r\n        setJobs(jobs.filter(job => job.id !== jobId));\r\n        }\r\n\r\n    useEffect(() => {\r\n        setJobs(data);\r\n    }, []);\r\n\r\n    return (\r\n        <JobContext.Provider \r\n        value={{\r\n            jobs,\r\n            deleteJob,\r\n            createJob\r\n        }}>\r\n        {props.children}\r\n        </JobContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACxD,SAASC,IAAI,IAAIC,IAAI,QAAQ,cAAc;AAAC;AAE5C,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AAEzC,OAAO,SAASM,kBAAkB,CAACC,KAAK,EAAE;EAAA;EACtC,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASQ,SAAS,CAACC,GAAG,EAAE;IACpBF,OAAO,CAAC,CAAC,GAAGL,IAAI,EACZ;MACAQ,KAAK,EAAED,GAAG,CAACC,KAAK;MAChBC,EAAE,EAAET,IAAI,CAACU,MAAM;MACfC,WAAW,EAAEJ,GAAG,CAACI;IACjB,CAAC,CACJ,CAAC;EACN;EACA,SAASC,SAAS,CAACC,KAAK,EAAE;IACtBR,OAAO,CAACL,IAAI,CAACc,MAAM,CAACP,GAAG,IAAIA,GAAG,CAACE,EAAE,KAAKI,KAAK,CAAC,CAAC;EAC7C;EAEJd,SAAS,CAAC,MAAM;IACZM,OAAO,CAACJ,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,UAAU,CAAC,QAAQ;IACpB,KAAK,EAAE;MACHD,IAAI;MACJY,SAAS;MACTN;IACJ,CAAE;IAAA,UACDF,KAAK,CAACW;EAAQ;IAAA;IAAA;IAAA;EAAA,QACO;AAE9B;AAAC,GA9BeZ,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
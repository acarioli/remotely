{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aldana\\\\Desktop\\\\proyectoReact\\\\remotely-pwa\\\\front\\\\src\\\\components\\\\JobList.jsx\",\n  _s = $RefreshSig$();\nimport '../css/JobList.css';\nimport { Table, Button } from 'react-bootstrap';\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Swal from 'sweetalert2';\nimport { TableControl } from 'react-bootstrap-table-control';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const URL = 'http://localhost:3001/';\n  const getJobs = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(URL);\n      setJobs(data.job);\n      console.log(data.job);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/').then(response => {\n      setJobs(response.data.job);\n      console.log(response.data.job);\n    });\n  }, []);\n  const handleDelete = id => {\n    console.log(id);\n    Swal.fire({\n      title: 'Are you sure you want to delete this job?',\n      showDenyButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Exit`\n    }).then(result => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        axios.delete(`${URL}${id}`);\n        Swal.fire('Deleted', '', 'success');\n        getJobs();\n      } else if (result.isDenied) {\n        Swal.fire('This job has not been deleted');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"m-4\",\n      children: \"Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TableControl, {\n      header: [{\n        key: \"id\",\n        name: \"#\"\n      }, {\n        key: \"name\",\n        name: \"Title\"\n      }, {\n        key: \"description\",\n        name: \"Description\"\n      }],\n      itens: [{\n        id: 1,\n        name: \"Name 1\",\n        description: \"Description 1\"\n      }, {\n        id: 2,\n        name: \"Name 2\",\n        description: \"Description 2\"\n      }, {\n        id: 3,\n        name: \"Name 3\",\n        description: \"Description 3\"\n      }, {\n        id: 4,\n        name: \"Name 4\",\n        description: \"Description 4\"\n      }, {\n        id: 5,\n        name: \"Name 5\",\n        description: \"Description 5\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n};\n_s(JobList, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["Table","Button","axios","React","useState","useEffect","Swal","TableControl","JobList","jobs","setJobs","URL","getJobs","data","get","job","console","log","error","then","response","handleDelete","id","fire","title","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","delete","isDenied","key","name","description"],"sources":["C:/Users/Aldana/Desktop/proyectoReact/remotely-pwa/front/src/components/JobList.jsx"],"sourcesContent":["import '../css/JobList.css';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport { TableControl } from 'react-bootstrap-table-control';\r\n\r\nconst JobList = () => {\r\n        \r\n    const [jobs, setJobs] = useState([])\r\n\r\n    const URL = 'http://localhost:3001/';\r\n\r\n    const getJobs = async () => {\r\n        try {\r\n        const { data } = await axios.get(URL);\r\n        setJobs(data.job)\r\n        console.log(data.job);\r\n        } catch (error) {\r\n        console.error(error);\r\n        }\r\n    }\r\n    \r\n    useEffect( () => {\r\n    axios.get('http://localhost:3001/').then((response) => {\r\n        setJobs(response.data.job);\r\n        console.log(response.data.job);\r\n    });\r\n}, [])\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        console.log(id);\r\n    \r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this job?',\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Delete',\r\n            denyButtonText: `Exit`,\r\n            }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n            axios.delete(`${URL}${id}`)\r\n            Swal.fire('Deleted', '', 'success')\r\n            getJobs()\r\n            } else if (result.isDenied) {\r\n            Swal.fire('This job has not been deleted')\r\n            }\r\n        })}\r\n\r\n          \r\n    return (   \r\n      \r\n            <div className=\"container\">\r\n                <h2 className=\"m-4\">Jobs</h2>\r\n                <TableControl\r\n                    header={[\r\n                    { key: \"id\", name: \"#\" },\r\n                    { key: \"name\", name: \"Title\" },\r\n                    { key: \"description\", name: \"Description\" }\r\n                    ]}\r\n                    itens={[\r\n                    { id: 1, name: \"Name 1\", description: \"Description 1\" },\r\n                    { id: 2, name: \"Name 2\", description: \"Description 2\" },\r\n                    { id: 3, name: \"Name 3\", description: \"Description 3\" },\r\n                    { id: 4, name: \"Name 4\", description: \"Description 4\" },\r\n                    { id: 5, name: \"Name 5\", description: \"Description 5\" }\r\n                    ]}\r\n                />\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default JobList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
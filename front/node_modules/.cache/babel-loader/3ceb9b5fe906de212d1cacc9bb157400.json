{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aldana\\\\Desktop\\\\proyectoReact\\\\remotely-pwa\\\\front\\\\src\\\\components\\\\JobList.jsx\",\n  _s = $RefreshSig$();\nimport '../css/JobList.css';\nimport { Button } from 'react-bootstrap';\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Swal from 'sweetalert2';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobList = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const URL = 'http://localhost:3001/';\n  const getJobs = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(URL);\n      setJobs(data.job);\n      console.log(data.job);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/').then(response => {\n      setJobs(response.data.job);\n      console.log(response.data.job);\n    });\n  }, []);\n  const handleDelete = id => {\n    console.log(id);\n    Swal.fire({\n      title: 'Are you sure you want to delete this job?',\n      showDenyButton: true,\n      confirmButtonText: 'Delete',\n      denyButtonText: `Exit`\n    }).then(result => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        axios.delete(`${URL}${id}`);\n        Swal.fire('Deleted', '', 'success');\n        getJobs();\n      } else if (result.isDenied) {\n        Swal.fire('This job has not been deleted');\n      }\n    });\n  };\n  const [page, setPage] = React.useState(0);\n  const [jobsPerPage, setJobsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeJobsPerPage = event => {\n    setJobsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"m-4\",\n      children: \"Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: jobs.map(job => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: job.align,\n                style: {\n                  minWidth: job.minWidth\n                },\n                children: job.label\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: jobs.slice(page * jobsPerPage, page * jobsPerPage + jobsPerPage).map(job => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: jobs.map(job => {\n                  {\n                    job.title;\n                  }\n                  ;\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: job.align,\n                    children: job.title && typeof value === 'number' ? job.title(value) : value\n                  }, job.description, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, job.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: jobs.length,\n        rowsPerPage: jobsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeJobsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n};\n_s(JobList, \"w1l3H7uvPryeCt35vSMHi66qDcs=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["Button","axios","React","useState","useEffect","Swal","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","JobList","jobs","setJobs","URL","getJobs","data","get","job","console","log","error","then","response","handleDelete","id","fire","title","showDenyButton","confirmButtonText","denyButtonText","result","isConfirmed","delete","isDenied","page","setPage","jobsPerPage","setJobsPerPage","handleChangePage","event","newPage","handleChangeJobsPerPage","target","value","width","overflow","maxHeight","map","align","minWidth","label","slice","description","length"],"sources":["C:/Users/Aldana/Desktop/proyectoReact/remotely-pwa/front/src/components/JobList.jsx"],"sourcesContent":["import '../css/JobList.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst JobList = () => {\r\n        \r\n    const [jobs, setJobs] = useState([])\r\n\r\n    const URL = 'http://localhost:3001/';\r\n\r\n    const getJobs = async () => {\r\n        try {\r\n        const { data } = await axios.get(URL);\r\n        setJobs(data.job)\r\n        console.log(data.job);\r\n        } catch (error) {\r\n        console.error(error);\r\n        }\r\n    }\r\n    \r\n    useEffect( () => {\r\n    axios.get('http://localhost:3001/').then((response) => {\r\n        setJobs(response.data.job);\r\n        console.log(response.data.job);\r\n    });\r\n}, [])\r\n\r\n\r\n    const handleDelete = (id) => {\r\n        console.log(id);\r\n    \r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this job?',\r\n            showDenyButton: true,\r\n            confirmButtonText: 'Delete',\r\n            denyButtonText: `Exit`,\r\n            }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n            axios.delete(`${URL}${id}`)\r\n            Swal.fire('Deleted', '', 'success')\r\n            getJobs()\r\n            } else if (result.isDenied) {\r\n            Swal.fire('This job has not been deleted')\r\n            }\r\n        })}\r\n\r\n            const [page, setPage] = React.useState(0);\r\n            const [jobsPerPage, setJobsPerPage] = React.useState(10);\r\n          \r\n            const handleChangePage = (event, newPage) => {\r\n              setPage(newPage);\r\n            };\r\n          \r\n            const handleChangeJobsPerPage = (event) => {\r\n              setJobsPerPage(+event.target.value);\r\n              setPage(0);\r\n            };\r\n          \r\n    return (   \r\n      \r\n            <div className=\"container\">\r\n                <h2 className=\"m-4\">Jobs</h2>\r\n                    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                        <TableContainer sx={{ maxHeight: 440 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                {jobs.map((job) => (\r\n                                    <TableCell\r\n                                    key={job.id}\r\n                                    align={job.align}\r\n                                    style={{ minWidth: job.minWidth }}\r\n                                    >\r\n                                    {job.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {jobs\r\n                                .slice(page * jobsPerPage, page * jobsPerPage + jobsPerPage)\r\n                                .map((job) => {\r\n                                    return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={job.id}>\r\n                                        {jobs.map((job) => {\r\n                                        {job.title};\r\n                                        \r\n                                        return (\r\n                                            <TableCell key={job.description} align={job.align}>\r\n                                            {job.title && typeof value === 'number'\r\n                                                ? job.title(value)\r\n                                                : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                        })}\r\n                                    </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={jobs.length}\r\n                            rowsPerPage={jobsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeJobsPerPage}\r\n                        />\r\n                        </Paper>\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default JobList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
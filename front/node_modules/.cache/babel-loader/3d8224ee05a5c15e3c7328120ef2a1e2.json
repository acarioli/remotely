{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aldana\\\\Desktop\\\\proyectoReact\\\\remotely-pwa\\\\front\\\\src\\\\components\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport \"../css/Contact.css\";\nimport Swal from 'sweetalert2';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const URL = 'http://localhost:3001/contact';\n  const [inputs, setInputs] = useState({\n    // id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleClick = async () => {\n    await axios.post(URL, inputs);\n    setInputs({\n      // id: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      message: \"\"\n    });\n    Swal.fire({\n      title: 'Thank you!',\n      text: 'Your message has been successfully sent. We will contact you very soon!',\n      icon: 'success',\n      confirmButtonText: 'Accept'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      sx: {\n        height: '00vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        sx: {\n          backgroundImage: 'url(https://www.ecovis.com/global/wp-content/uploads/2021/10/USA_Andrey-Popov_AdobeStock_394186123-1280x550.jpg)',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 7,\n            mx: 15,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 2\n            },\n            id: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h3\",\n            id: \"title\",\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"container mt-5\",\n            id: \"form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content-fluid d-flex flex-column align-items-center\",\n              id: \"boxp\",\n              children: [Object.keys(inputs).map((key, index) => /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"pt-4\",\n                style: {\n                  maxWidth: \"20px\"\n                },\n                id: \"grp\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  id: \"label\",\n                  children: key === \"\" ? key.toUpperCase() : key[0].toUpperCase() + key.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  id: \"control\",\n                  name: key,\n                  value: inputs[key],\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mt-3\",\n                onClick: handleClick,\n                id: \"button\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"U9erjevoNF2+OFIiNRHTYwl9RIA=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Button","Form","axios","Swal","Grid","Paper","Avatar","Typography","Box","Contact","URL","inputs","setInputs","firstName","lastName","email","message","handleChange","e","target","name","value","handleClick","post","fire","title","text","icon","confirmButtonText","height","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","Object","keys","map","key","index","maxWidth","toUpperCase","slice"],"sources":["C:/Users/Aldana/Desktop/proyectoReact/remotely-pwa/front/src/components/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\nimport \"../css/Contact.css\";\r\nimport Swal from 'sweetalert2';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport Box from '@mui/material/Box';\r\nconst Contact = () => {\r\n    \r\n        const URL = 'http://localhost:3001/contact';\r\n\r\n        const [inputs, setInputs] = useState({\r\n            // id: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            message:\"\"\r\n        });\r\n\r\n        const handleChange = (e) => {\r\n            setInputs({\r\n            ...inputs,\r\n            [e.target.name]: e.target.value,\r\n            });\r\n        };\r\n\r\n        const handleClick = async () => {\r\n            await axios.post(URL, inputs)\r\n            setInputs({\r\n            // id: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            message:\"\"\r\n            })\r\n\r\n        Swal.fire({\r\n            title: 'Thank you!',\r\n            text: 'Your message has been successfully sent. We will contact you very soon!',\r\n            icon: 'success',\r\n            confirmButtonText: 'Accept'\r\n        })\r\n\r\n    };\r\n\r\nreturn (\r\n    <div>\r\n        <Grid container component=\"main\" sx={{ height: '00vh' }}>\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: 'url(https://www.ecovis.com/global/wp-content/uploads/2021/10/USA_Andrey-Popov_AdobeStock_394186123-1280x550.jpg)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: (t) =>\r\n            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        }}\r\n        />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <Box\r\n                sx={{\r\n                my: 7,\r\n                mx: 15,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                }}\r\n            >\r\n        <Avatar sx={{ m: 2 }} id=\"avatar\" ></Avatar>\r\n        <Typography component=\"h1\" variant=\"h3\"  id=\"title\">\r\n            Contact Us\r\n        </Typography>\r\n\r\n        <Form className=\"container mt-5\" id=\"form\">\r\n            <div className=\"content-fluid d-flex flex-column align-items-center\" id=\"boxp\">\r\n            {Object.keys(inputs).map((key, index) => (\r\n                <Form.Group className=\"pt-4\" key={index} style={{ maxWidth: \"20px\" }} id=\"grp\">\r\n                <Form.Label id=\"label\">\r\n                    {key === \"\" ? key.toUpperCase() : key[0].toUpperCase() + key.slice(1)}</Form.Label>\r\n                <Form.Control\r\n                    id=\"control\"\r\n                    name={key}\r\n                    value={inputs[key]}\r\n                    onChange={handleChange}\r\n                />\r\n                </Form.Group>\r\n            ))}\r\n            \r\n                <Button className=\"mt-3\" onClick={handleClick} id=\"button\">Send</Button>\r\n            </div>\r\n        </Form>\r\n        </Box>\r\n        </Grid>\r\n        </Grid>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Contact"],"mappings":"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"},"metadata":{},"sourceType":"module"}